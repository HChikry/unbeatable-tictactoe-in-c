name: Unit Tests

on:
  push:
    branches:
      [
        dev,
      ]
  pull_request:
    branches:
      [
        dev,
        master,
      ]

  # If you want to run it manually you would add "worflow_dispatch"
  # workflow_dispatch:

jobs:
  Unbeatable_Mode:
    runs-on: ubuntu-latest
    steps:
      # Usually this is always needed
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Preparing Samples
        run:
          |
          gcc -o bin/test/helper/user_choices_samples test/unit/unbeatable_mode/user_choices_samples.c
          bin/test/helper/./user_choices_samples > test_output.txt
          if grep -q "PASS" test_output.txt; then
            # Tests passed, print success message
            echo "Tests passed!"
          else
            # Tests failed, print error message and suggest checking output
            echo "::error::Tests failed! Check test_output.txt for details."
            exit 1 # Mark job as failed
          fi

      - name: Running Tests
        run:
          |
          gcc -o bin/test/unit/unbeatable_mode_test test/unit/unbeatable_mode/unbeatable_mode_test.c src/game_play/game_checkers.c src/game_play/user_turn.c src/game_play/game_play.c src/computer_turn/unbeatable_mode.c src/computer_turn/normal_mode.c src/computer_turn/computer_moves.c src/computer_turn/computer_turn.c src/common/graphic.c src/common/err.c
          bin/test/unit/./unbeatable_mode_test > test_output.txt
          if grep -q "FAIL" test_output.txt; then
            echo "::error::Tests failed! Check test_output.txt for details."
            exit 1 # Exit with non-zero code to mark job as failed
          else
            echo "Tests passed!"
          fi

# THE RUN SYNTAX TO RUN ALL THE TESTS AT ONCE
# gcc -o bin/test/all_tests_run test/run_testing.c test/unit/unbeatable_mode/unbeatable_mode_game_simulation.c src/game_play/game_checkers.c src/game_play/user_turn.c src/game_play/game_play.c src/computer_turn/unbeatable_mode.c src/computer_turn/normal_mode.c src/computer_turn/computer_moves.c src/computer_turn/computer_turn.c src/common/graphic.c src/common/err.c test/unit/unbeatable_mode/user_choices_samples.c
# bin/test/./all_tests_run > test_output.txt
# if grep -q FAIL test_output.txt; then
#   exit 1 # Exit with non-zero code to mark job as failed
# fi
